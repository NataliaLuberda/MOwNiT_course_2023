
Program został napisany w języku Python. Aby uruchomić program należy mieć zainstalowany interpreter Pythona 3 oraz wymagane biblioteki i pakiety:Numpy, Pandas, dataframe_image, Matplotlib, math.Aby pobrać wymagane biblioteki należy zainstalować pip - system do zarządzania pakietami języka Python. Aby pobrać wymagany pakiet wystarczy wpisać w konsoli np. pip install numpy

Oto opis i instrukcja używania funkcji zawartych w powyższym kodzie:

f(x) - jest to funkcja zwracająca wartość funkcji sin(x) + x dla danego argumentu x. Funkcję tę można użyć w innych funkcjach do wyznaczenia wartości funkcji dla różnych argumentów.

Aproksymacja(x, y, x_p, n) - funkcja ta służy do aproksymacji funkcji f(x) za pomocą wielomianu interpolacyjnego stopnia n. Argumenty funkcji to: x - wektor wartości argumentów funkcji f(x), y - wektor wartości funkcji f(x) odpowiadających argumentom x, x_p - wektor wartości argumentów dla których wyznaczone będą wartości aproksymującej funkcji, n - stopień wielomianu interpolacyjnego. Funkcja zwraca wektor wartości aproksymującej funkcji dla argumentów x_p.

main(n) - jest to funkcja służąca do wyznaczania wartości funkcji aproksymującej i obliczania błędów aproksymacji. Argument n oznacza stopień wielomianu interpolacyjnego. Funkcja wyznacza wektory wartości argumentów x i funkcji f(x) dla danego przedziału, wyznacza wartości aproksymującej funkcji dla danego stopnia wielomianu i wykres aproksymującej funkcji wraz z wartościami wyjściowej funkcji i węzłami interpolacyjnymi. Funkcja zwraca krotkę (maksymalny błąd aproksymacji, norma euklidesowa błędów aproksymacji).

calculate_errors(start, stop, step, n) - jest to funkcja służąca do wyznaczania błędów aproksymacji dla różnych wartości liczby węzłów interpolacyjnych. Argumenty funkcji to: start - początkowa liczba węzłów interpolacyjnych, stop - końcowa liczba węzłów interpolacyjnych, step - krok zwiększania liczby węzłów, n - stopień wielomianu interpolacyjnego. Funkcja wyznacza wartości błędów aproksymacji dla różnych wartości liczby węzłów interpolacyjnych, a następnie zwraca DataFrame z wynikami błędów aproksymacji dla każdej z wartości liczby węzłów interpolacyjnych

W plikach .xlsx znajdą się opisane w raporcie tabele z błędami. 


Oto instrukcje użycia funkcji:



f(x) - funkcja zwracająca wartość funkcji.

Argumenty:

x - wartość punktu, w którym ma zostać obliczona wartość funkcji.
Przykład użycia:


result = f(1.5)
print(result)
Output:


0.958851077208406


Aproksymacja(x, y, x_p, n) - funkcja zwracająca wartości funkcji aproksymującej dla zadanego wektora punktów x_p na podstawie danych wektorów x i y oraz stopnia wielomianu n.

Argumenty:

x - wektor zawierający wartości punktów węzłowych funkcji.
y - wektor zawierający wartości funkcji w punktach z wektora x.
x_p - wektor punktów, dla których mają zostać obliczone wartości funkcji aproksymującej.
n - stopień wielomianu, który ma zostać użyty do aproksymacji.
Przykład użycia:


x = np.linspace(-np.pi, np.pi, 20, endpoint=True)
y = f(x)
x_p = np.linspace(-np.pi, np.pi, 1000, endpoint=True)
y_p = Aproksymacja(x, y, x_p, 5)
print(y_p)
Output:


[0.00693106 0.00415643 0.0014399  ... 0.0014399  0.00415643 0.00693106]



main(n) - główna funkcja programu, generująca wykres funkcji aproksymującej na podstawie danych wejściowych oraz obliczająca błędy aproksymacji.

Argumenty:

n - stopień wielomianu, który ma zostać użyty do aproksymacji.
Przykład użycia:


main(5)
Output:


(0.12436292921263817, 0.7506223316007467)





calculate_errors(start, stop, step, degree) - funkcja obliczająca maksymalny błąd aproksymacji oraz błąd średniokwadratowy dla stopni wielomianów z przedziału [start, stop] z krokiem step.

Argumenty:

start - początkowy stopień wielomianu.
stop - końcowy stopień wielomianu.
step - krok zmiany stopnia wielomianu.
degree - stopień wielomianu dla funkcji main(n).
Przykład użycia:

calculate_errors(10, 100, 3, 20)
Output:

Copy code
([0.11797421106426923, 0.065])


Odpowiednio w zalezności od preferencji należy uruchomić odpowiedni program main_zmiana_m lub main_zmiana_n
